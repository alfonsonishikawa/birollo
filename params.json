{"name":"Birollo","tagline":"Stereoscopic cross eyes canvas library","body":"Librer√≠a que extiende un objeto de contexto de canvas con funciones que de manera casi-transparente para el programador transforma un canvas en 3D.\r\n\r\nSe recomienda leer previamente las instrucciones: [http://www.starosta.com/3dshowcase/ihelp.html](http://www.starosta.com/3dshowcase/ihelp.html)\r\n\r\n[Ir al ejemplo](birollo/birollo.html)\r\n\r\nEnglish version:\r\n\r\nCross eyes stereoscopic canvas library.\r\n\r\nProject under development\r\n\r\nDeveloped after a 12 hours javascript course, started as a proof of concept to test prototype features in javascript. Seems canvas makes some checks about the instance when extending, so it is not posible to do what I wanted to do. Anyway, I managed to make the programming of the stereoscopic efect relatively transparent for the programmer.\r\n\r\nOnline example: http://alfonsonishikawa.github.io/birollo\r\n\r\nI encourage to read the instructions before (not mine): http://www.starosta.com/3dshowcase/ihelp.html\r\nFeatures implemented\r\n\r\n    fillRect\r\n    drawImage\r\n\r\nFeatures TO DO\r\n\r\n    Enable/disable the stereoscopic effect.\r\n    Queue the drawing commands to draw at the end in proper order (calling a new function commint() or something).\r\n    Callback to determine the depth of the elements, so already existing programs can \"realtively\" easy to update to stereoscopic.\r\n    Computations of X, Y and Depth cached.\r\n    Implement the strereoscopic wrapper for all possible functions of canvas (http://www.w3.org/TR/2014/CR-2dcontext-20140821/)\r\n\r\n\r\n[Try the example](birollo/birollo.html)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}